{"changed":true,"filter":false,"title":"hw5_todolist.js","tooltip":"/js/hw5_todolist.js","value":"    // This is just a placeholder date for the purpoose of filling the object.\n    var tempDate = new Date();\n\n    // Place outside of the document.ready statement; it needs to be a global variable.\n    var toDoList = [{\n        'name': 'Clean room',\n        'dueDate': tempDate,\n        'complete': true\n    }, {\n        'name': 'Grocery shop',\n        'dueDate': tempDate,\n        'complete': true\n    }, {\n        'name': 'Get an oil change',\n        'dueDate': tempDate,\n        'complete': false\n    }, {\n        'name': 'Do course homework',\n        'dueDate': tempDate,\n        'complete': true\n    }, {\n        'name': 'Get a haircut',\n        'dueDate': tempDate,\n        'complete': true\n    }];\n\n    $(document).ready(function () {\n\n        /* Event listener in order to mark off a task as complete\n        $('.checkoff').on('dbclick', function(evt){\n        }) */\n\n        // Listen for a click on a new archive button that lives outside the list to removeCompleted() \n        $('#archive').on('click', function () {\n            removeCompleted();\n        });\n\n        // bind AddTask() to a form with fields where users can fill out a name and hit submit    \n        $('#submitNew').on('click', function () {\n            var newTaskInput = $('#add_new_task').val();\n\n            // Use constructor to add the new task\n            var positionOfTask = addTask(newTaskInput);\n\n            // Then change the status of complete from false to true to TEST reprinting function\n            //toDoList[positionOfTask].complete = true;\n            //console.log(\"Checking status here: \" + toDoList[positionOfTask].complete);  // test output\n\n            // print just that one task\n            //printTask(toDoList[positionOfTask], positionOfTask);\n        });\n\n        // Unordered list element of class ***taskListGroup***\n        $('.panel-body').append('<ul class=\"taskListGroup\"></ul>');\n\n        // Some error handling with a call to output tasks in the HTML of hw5_todolist.html\n        for (var i = 0; i in toDoList; i++) {\n            try {\n                printTask(toDoList[i], i);\n            } catch (error) {\n                console.log(\"One of the tasks in your to-do-list is incomplete; \" + error);\n            }\n        }\n\n        function printTask(taskObj, i) {\n            console.log(taskObj);\n            // This conditional makes the counter argument passed into the function, as called, optional. Not this was originally written: if (counter===null) counter=0; \n            var counter = i || 0;\n\n            if (taskObj.name === undefined) {\n                throw \"You are missing a task name; what cannot be identified or named, can hardly be done.\";\n            }\n\n            if (taskObj.complete === true) { // or you can write taskObj['complete']\n                $('.taskListGroup').append(\"<a href='#' class='checkoff' id='checkoff\" + i + \"'><li class='taskCompleted' id='litem-\" + counter + \"'></li></a>\");\n\n                var strTempID = 'li#litem-' + counter;\n                $(strTempID).text(taskObj.name).append(\"&nbsp;&nbsp;<i class='glyphicon glyphicon-ok'></i>\");\n                $(strTempID).css(\"color\", \"green\");\n\n            }\n        }\n\n        /* The function (addTask) calls newTask() and adds the object returned from that function to the array \n        where we keep the rest of our task objects. Once done, we re-render the list HTML.*/\n        function addTask(needs2Bdone, completed) { // add a new parameter here\n\n            var theTask = new Task(needs2Bdone); // constructor call\n            console.log(\"The task at hand is: \" + theTask.name + \", \" + theTask.dueDate + \", \" + theTask.complete);\n            toDoList.push(theTask); // adds the object to the ToDoListarray\n            console.log(\"You successfully added the new task object to your array.\");\n            printTask(theTask);\n\n            // Trying to return the position or index of the new item in the array!\n            console.log(toDoList.indexOf(theTask));\n            return toDoList.indexOf(theTask);\n\n        }\n\n        function Task(name) { // a constructor function, we want to add a complete argument here\n            var todaysDate = new Date();\n            this.dueDate = dueNextWeek(todaysDate);\n            console.log(this.dueDate); //OUTPUT to determine whether dueNextWeek runs correctly\n            this.name = name || 'test'; // this statement indicates an optional constructor function parameter\n            this['complete'] = false; // rather than this.complete because complete is a key word.\n            var taskObj = {\n                'name': this.name,\n                'dueDate': this.dueDate,\n                'complete': this.complete\n            };\n            // Later, you may test to see if the object toDoList exists and whether or not it might be empty. Does the array exist, written as so: if (typeof toDoList == \"undefined\"){}\n            return taskObj;\n        }\n\n        function dueNextWeek(dueDate) {\n            dueDate.setDate(dueDate.getDate() + 7);\n            console.log(\"One week from today is \" + dueDate);\n            return dueDate;\n        }\n\n        // Function call\n        addTask(\"Go running\");\n\n        function removeCompleted() { //slice and splice\n            $('li.taskCompleted').remove(); // just to affect the HTML of the page and the task object can stay the same.\n\n            var newTasks = [];\n            // Remove any completed object entry from the toDoList array\n            for (var any = 0; any < toDoList.length; any++) {\n                console.log(toDoList[i]);\n                if (!toDoList[i].complete) {\n                    /*if(toDoList[any].complete===true){\n                        console.log(\"The item \" + toDoList[any].name + \" ought to be removed.\");\n                        toDoList.slice(any, 1); */\n                    newTasks.push(toDoList[i]);\n                }\n                toDoList = newTasks;\n                console.log(toDoList);\n            }\n            //$.inArray(taskObj)\n            // sync with a cloud application and remove the entry from the database\n        }\n\n    });","undoManager":{"mark":59,"position":100,"stack":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":137,"column":29},"end":{"row":137,"column":30}},"text":"a"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":137,"column":30},"end":{"row":137,"column":31}},"text":"s"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":137,"column":31},"end":{"row":137,"column":32}},"text":"k"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":137,"column":32},"end":{"row":137,"column":33}},"text":"s"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":137,"column":34},"end":{"row":137,"column":35}},"text":";"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":132,"column":20},"end":{"row":132,"column":21}},"text":"/"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":132,"column":21},"end":{"row":132,"column":22}},"text":"/"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":131,"column":17},"end":{"row":131,"column":18}},"text":"/"},{"action":"insertText","range":{"start":{"row":131,"column":17},"end":{"row":131,"column":18}},"text":"*"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":132,"column":21},"end":{"row":132,"column":22}},"text":"/"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":132,"column":20},"end":{"row":132,"column":21}},"text":"/"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":133,"column":21},"end":{"row":133,"column":22}},"text":"/"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":133,"column":20},"end":{"row":133,"column":21}},"text":"/"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":133,"column":43},"end":{"row":133,"column":44}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":133,"column":44},"end":{"row":133,"column":45}},"text":"*"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":133,"column":45},"end":{"row":133,"column":46}},"text":"/"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":136,"column":16},"end":{"row":136,"column":21}},"text":"tasks"},{"action":"insertText","range":{"start":{"row":136,"column":16},"end":{"row":136,"column":17}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":136,"column":17},"end":{"row":136,"column":18}},"text":"o"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":136,"column":18},"end":{"row":136,"column":19}},"text":"D"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":136,"column":19},"end":{"row":136,"column":20}},"text":"o"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":136,"column":20},"end":{"row":136,"column":21}},"text":"L"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":136,"column":21},"end":{"row":136,"column":22}},"text":"i"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":136,"column":22},"end":{"row":136,"column":23}},"text":"s"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":136,"column":23},"end":{"row":136,"column":24}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":137,"column":28},"end":{"row":137,"column":33}},"text":"tasks"},{"action":"insertText","range":{"start":{"row":137,"column":28},"end":{"row":137,"column":29}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":137,"column":29},"end":{"row":137,"column":30}},"text":"o"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":137,"column":30},"end":{"row":137,"column":31}},"text":"D"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":137,"column":31},"end":{"row":137,"column":32}},"text":"o"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":137,"column":32},"end":{"row":137,"column":33}},"text":"L"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":137,"column":33},"end":{"row":137,"column":34}},"text":"i"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":137,"column":34},"end":{"row":137,"column":35}},"text":"s"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":137,"column":35},"end":{"row":137,"column":36}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":126,"column":19},"end":{"row":126,"column":20}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":130,"column":24},"end":{"row":130,"column":25}},"text":"s"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":130,"column":23},"end":{"row":130,"column":24}},"text":"k"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":130,"column":22},"end":{"row":130,"column":23}},"text":"s"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":130,"column":21},"end":{"row":130,"column":22}},"text":"a"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":130,"column":21},"end":{"row":130,"column":22}},"text":"o"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":130,"column":22},"end":{"row":130,"column":23}},"text":"D"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":130,"column":23},"end":{"row":130,"column":24}},"text":"o"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":130,"column":24},"end":{"row":130,"column":25}},"text":"L"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":130,"column":25},"end":{"row":130,"column":26}},"text":"i"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":130,"column":26},"end":{"row":130,"column":27}},"text":"s"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":130,"column":27},"end":{"row":130,"column":28}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":134,"column":38},"end":{"row":134,"column":39}},"text":"s"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":134,"column":37},"end":{"row":134,"column":38}},"text":"k"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":134,"column":36},"end":{"row":134,"column":37}},"text":"s"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":134,"column":35},"end":{"row":134,"column":36}},"text":"a"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":134,"column":35},"end":{"row":134,"column":36}},"text":"o"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":134,"column":36},"end":{"row":134,"column":37}},"text":"D"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":134,"column":37},"end":{"row":134,"column":38}},"text":"o"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":134,"column":38},"end":{"row":134,"column":39}},"text":"L"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":134,"column":39},"end":{"row":134,"column":40}},"text":"i"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":134,"column":40},"end":{"row":134,"column":41}},"text":"s"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":134,"column":41},"end":{"row":134,"column":42}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":45,"column":8},"end":{"row":45,"column":9}},"text":"/"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":45,"column":9},"end":{"row":45,"column":10}},"text":"/"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":46,"column":8},"end":{"row":46,"column":9}},"text":"/"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":46,"column":9},"end":{"row":46,"column":10}},"text":"/"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":143,"column":0},"end":{"row":143,"column":3}},"text":"});"},{"action":"removeLines","range":{"start":{"row":0,"column":0},"end":{"row":143,"column":0}},"nl":"\n","lines":["    // This is just a placeholder date for the purpoose of filling the object.","    var tempDate = new Date();","    ","    // Place outside of the document.ready statement; it needs to be a global variable.","    var toDoList = [{","        'name': 'Clean room',","        'dueDate': tempDate,","        'complete': true","    }, {","        'name': 'Grocery shop',","        'dueDate': tempDate,       ","        'complete': true","    }, {","        'name': 'Get an oil change',","        'dueDate': tempDate,         ","        'complete': false","    }, {","        'name': 'Do course homework',","        'dueDate': tempDate,         ","        'complete': true","    }, {","        'name': 'Get a haircut',","        'dueDate': tempDate,         ","        'complete': true","    }];","    ","$(document).ready(function () {","","    /* Event listener in order to mark off a task as complete","    $('.checkoff').on('dbclick', function(evt){","    }) */","    ","    // Listen for a click on a new archive button that lives outside the list to removeCompleted() ","    $('#archive').on('click', function(){","        removeCompleted();","    });","    ","    // bind AddTask() to a form with fields where users can fill out a name and hit submit    ","    $('#submitNew').on('click', function(){","        var newTaskInput = $('#add_new_task').val();","        ","        // Use constructor to add the new task","        var positionOfTask = addTask(newTaskInput);","        ","        // Then change the status of complete from false to true to TEST reprinting function","        //toDoList[positionOfTask].complete = true;","        //console.log(\"Checking status here: \" + toDoList[positionOfTask].complete);  // test output","","        // print just that one task","        //printTask(toDoList[positionOfTask], positionOfTask);","    });","    ","    // Unordered list element of class ***taskListGroup***","    $('.panel-body').append('<ul class=\"taskListGroup\"></ul>');","","    // Some error handling with a call to output tasks in the HTML of hw5_todolist.html","    for (var i = 0; i in toDoList; i++) {","        try {","            printTask(toDoList[i], i);","        } catch (error) {","            console.log(\"One of the tasks in your to-do-list is incomplete; \" + error);","        }","    }","","    function printTask(taskObj, i) {","        console.log(taskObj);","        // This conditional makes the counter argument passed into the function, as called, optional. Not this was originally written: if (counter===null) counter=0; ","        var counter = i || 0;","","        if (taskObj.name === undefined) {","            throw \"You are missing a task name; what cannot be identified or named, can hardly be done.\";","        }","","        if (taskObj.complete === true) { // or you can write taskObj['complete']","            $('.taskListGroup').append(\"<a href='#' class='checkoff' id='checkoff\" + i + \"'><li class='taskCompleted' id='litem-\" + counter + \"'></li></a>\");","","            var strTempID = 'li#litem-' + counter;","            $(strTempID).text(taskObj.name).append(\"&nbsp;&nbsp;<i class='glyphicon glyphicon-ok'></i>\");","            $(strTempID).css(\"color\", \"green\");","","        }","    }","","    /* The function (addTask) calls newTask() and adds the object returned from that function to the array ","    where we keep the rest of our task objects. Once done, we re-render the list HTML.*/","    function addTask(needs2Bdone, completed) { // add a new parameter here","","        var theTask = new Task(needs2Bdone); // constructor call","        console.log(\"The task at hand is: \" + theTask.name + \", \" + theTask.dueDate + \", \" + theTask.complete);","        toDoList.push(theTask); // adds the object to the ToDoListarray","        console.log(\"You successfully added the new task object to your array.\");","        printTask(theTask);","        ","        // Trying to return the position or index of the new item in the array!","        console.log(toDoList.indexOf(theTask));","        return toDoList.indexOf(theTask);","        ","    }","","   function Task(name) { // a constructor function","        var todaysDate = new Date();","        this.dueDate = dueNextWeek(todaysDate);","        console.log(this.dueDate); //OUTPUT to determine whether dueNextWeek runs correctly","        this.name = name || 'test'; // this statement indicates an optional constructor function parameter","        this['complete'] = false; // rather than this.complete because complete is a key word.","        var taskObj = {","            'name': this.name,","            'dueDate': this.dueDate,","            'complete': this.complete","        };","        // Later, you may test to see if the object toDoList exists and whether or not it might be empty. Does the array exist, written as so: if (typeof toDoList == \"undefined\"){}","        return taskObj;","    }","","    function dueNextWeek(dueDate) {","        dueDate.setDate(dueDate.getDate() + 7);","        console.log(\"One week from today is \" + dueDate);","        return dueDate;","    }","","    // Function call","    addTask(\"Go running\");","","    function removeCompleted() { //slice and splice","            $('li.taskCompleted').remove(); // just to affect the HTML of the page and the task object can stay the same.","            ","            var newTasks =[];","            // Remove any completed object entry from the toDoList array","            for(var any=0; any <toDoList.length; any++){","                console.log(toDoList[i]);","                if(!toDoList[i].complete){","                /*if(toDoList[any].complete===true){","                    console.log(\"The item \" + toDoList[any].name + \" ought to be removed.\");","                    toDoList.slice(any, 1); */","                    newTasks.push(toDoList[i]);","                }","                toDoList = newTasks;","                console.log(toDoList);","            }","            //$.inArray(taskObj)","            // sync with a cloud application and remove the entry from the database","    }","    "]}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":78}},"text":"    // This is just a placeholder date for the purpoose of filling the object."},{"action":"insertText","range":{"start":{"row":0,"column":78},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":143,"column":0}},"lines":["    var tempDate = new Date();","","    // Place outside of the document.ready statement; it needs to be a global variable.","    var toDoList = [{","        'name': 'Clean room',","        'dueDate': tempDate,","        'complete': true","    }, {","        'name': 'Grocery shop',","        'dueDate': tempDate,","        'complete': true","    }, {","        'name': 'Get an oil change',","        'dueDate': tempDate,","        'complete': false","    }, {","        'name': 'Do course homework',","        'dueDate': tempDate,","        'complete': true","    }, {","        'name': 'Get a haircut',","        'dueDate': tempDate,","        'complete': true","    }];","","    $(document).ready(function () {","","        /* Event listener in order to mark off a task as complete","        $('.checkoff').on('dbclick', function(evt){","        }) */","","        // Listen for a click on a new archive button that lives outside the list to removeCompleted() ","        $('#archive').on('click', function () {","            removeCompleted();","        });","","        // bind AddTask() to a form with fields where users can fill out a name and hit submit    ","        $('#submitNew').on('click', function () {","            var newTaskInput = $('#add_new_task').val();","","            // Use constructor to add the new task","            var positionOfTask = addTask(newTaskInput);","","            // Then change the status of complete from false to true to TEST reprinting function","            //toDoList[positionOfTask].complete = true;","            //console.log(\"Checking status here: \" + toDoList[positionOfTask].complete);  // test output","","            // print just that one task","            //printTask(toDoList[positionOfTask], positionOfTask);","        });","","        // Unordered list element of class ***taskListGroup***","        $('.panel-body').append('<ul class=\"taskListGroup\"></ul>');","","        // Some error handling with a call to output tasks in the HTML of hw5_todolist.html","        for (var i = 0; i in toDoList; i++) {","            try {","                printTask(toDoList[i], i);","            } catch (error) {","                console.log(\"One of the tasks in your to-do-list is incomplete; \" + error);","            }","        }","","        function printTask(taskObj, i) {","            console.log(taskObj);","            // This conditional makes the counter argument passed into the function, as called, optional. Not this was originally written: if (counter===null) counter=0; ","            var counter = i || 0;","","            if (taskObj.name === undefined) {","                throw \"You are missing a task name; what cannot be identified or named, can hardly be done.\";","            }","","            if (taskObj.complete === true) { // or you can write taskObj['complete']","                $('.taskListGroup').append(\"<a href='#' class='checkoff' id='checkoff\" + i + \"'><li class='taskCompleted' id='litem-\" + counter + \"'></li></a>\");","","                var strTempID = 'li#litem-' + counter;","                $(strTempID).text(taskObj.name).append(\"&nbsp;&nbsp;<i class='glyphicon glyphicon-ok'></i>\");","                $(strTempID).css(\"color\", \"green\");","","            }","        }","","        /* The function (addTask) calls newTask() and adds the object returned from that function to the array ","        where we keep the rest of our task objects. Once done, we re-render the list HTML.*/","        function addTask(needs2Bdone, completed) { // add a new parameter here","","            var theTask = new Task(needs2Bdone); // constructor call","            console.log(\"The task at hand is: \" + theTask.name + \", \" + theTask.dueDate + \", \" + theTask.complete);","            toDoList.push(theTask); // adds the object to the ToDoListarray","            console.log(\"You successfully added the new task object to your array.\");","            printTask(theTask);","","            // Trying to return the position or index of the new item in the array!","            console.log(toDoList.indexOf(theTask));","            return toDoList.indexOf(theTask);","","        }","","        function Task(name) { // a constructor function","            var todaysDate = new Date();","            this.dueDate = dueNextWeek(todaysDate);","            console.log(this.dueDate); //OUTPUT to determine whether dueNextWeek runs correctly","            this.name = name || 'test'; // this statement indicates an optional constructor function parameter","            this['complete'] = false; // rather than this.complete because complete is a key word.","            var taskObj = {","                'name': this.name,","                'dueDate': this.dueDate,","                'complete': this.complete","            };","            // Later, you may test to see if the object toDoList exists and whether or not it might be empty. Does the array exist, written as so: if (typeof toDoList == \"undefined\"){}","            return taskObj;","        }","","        function dueNextWeek(dueDate) {","            dueDate.setDate(dueDate.getDate() + 7);","            console.log(\"One week from today is \" + dueDate);","            return dueDate;","        }","","        // Function call","        addTask(\"Go running\");","","        function removeCompleted() { //slice and splice","            $('li.taskCompleted').remove(); // just to affect the HTML of the page and the task object can stay the same.","","            var newTasks = [];","            // Remove any completed object entry from the toDoList array","            for (var any = 0; any < toDoList.length; any++) {","                console.log(toDoList[i]);","                if (!toDoList[i].complete) {","                    /*if(toDoList[any].complete===true){","                        console.log(\"The item \" + toDoList[any].name + \" ought to be removed.\");","                        toDoList.slice(any, 1); */","                    newTasks.push(toDoList[i]);","                }","                toDoList = newTasks;","                console.log(toDoList);","            }","            //$.inArray(taskObj)","            // sync with a cloud application and remove the entry from the database","        }",""]},{"action":"insertText","range":{"start":{"row":143,"column":0},"end":{"row":143,"column":7}},"text":"    });"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":99,"column":55},"end":{"row":99,"column":56}},"text":","}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":99,"column":56},"end":{"row":99,"column":57}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":99,"column":57},"end":{"row":99,"column":58}},"text":"w"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":99,"column":58},"end":{"row":99,"column":59}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":99,"column":59},"end":{"row":99,"column":60}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":99,"column":60},"end":{"row":99,"column":61}},"text":"w"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":99,"column":61},"end":{"row":99,"column":62}},"text":"a"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":99,"column":62},"end":{"row":99,"column":63}},"text":"n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":99,"column":63},"end":{"row":99,"column":64}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":99,"column":64},"end":{"row":99,"column":65}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":99,"column":65},"end":{"row":99,"column":66}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":99,"column":66},"end":{"row":99,"column":67}},"text":"o"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":99,"column":67},"end":{"row":99,"column":68}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":99,"column":68},"end":{"row":99,"column":69}},"text":"a"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":99,"column":69},"end":{"row":99,"column":70}},"text":"d"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":99,"column":70},"end":{"row":99,"column":71}},"text":"d"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":99,"column":71},"end":{"row":99,"column":72}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":99,"column":72},"end":{"row":99,"column":73}},"text":"a"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":99,"column":73},"end":{"row":99,"column":74}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":99,"column":74},"end":{"row":99,"column":75}},"text":"c"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":99,"column":75},"end":{"row":99,"column":76}},"text":"o"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":99,"column":76},"end":{"row":99,"column":77}},"text":"m"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":99,"column":77},"end":{"row":99,"column":78}},"text":"p"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":99,"column":78},"end":{"row":99,"column":79}},"text":"l"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":99,"column":79},"end":{"row":99,"column":80}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":99,"column":80},"end":{"row":99,"column":81}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":99,"column":81},"end":{"row":99,"column":82}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":99,"column":82},"end":{"row":99,"column":83}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":99,"column":83},"end":{"row":99,"column":84}},"text":"a"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":99,"column":84},"end":{"row":99,"column":85}},"text":"r"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":99,"column":85},"end":{"row":99,"column":86}},"text":"g"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":99,"column":86},"end":{"row":99,"column":87}},"text":"u"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":99,"column":87},"end":{"row":99,"column":88}},"text":"m"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":99,"column":88},"end":{"row":99,"column":89}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":99,"column":89},"end":{"row":99,"column":90}},"text":"n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":99,"column":90},"end":{"row":99,"column":91}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":99,"column":91},"end":{"row":99,"column":92}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":99,"column":92},"end":{"row":99,"column":93}},"text":"h"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":99,"column":93},"end":{"row":99,"column":94}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":99,"column":94},"end":{"row":99,"column":95}},"text":"r"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":99,"column":95},"end":{"row":99,"column":96}},"text":"e"}]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":1.5,"selection":{"start":{"row":99,"column":96},"end":{"row":99,"column":96},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1405550241144}